apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
kapt {
    correctErrorTypes = true
    useBuildCache = true
}


android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "me.yisuk.kim.marvel"
        minSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "MARVEL_API_PUBLIC_KEY", "\"" + propOrDef("MARVEL_CLIENT_PUBLIC_KEY", "") + "\""
        buildConfigField "String", "MARVEL_API_PRIVATE_KEY", "\"" + propOrDef("MARVEL_CLIENT_PRIVATE_KEY", "") + "\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation project(":data")
    implementation project(":remote")

    implementation "com.android.support:appcompat-v7:${versions.support_library}"
    implementation "com.android.support:design:${versions.support_library}"

    implementation "com.android.support.constraint:constraint-layout:${versions.constraint_layout}"

    implementation "androidx.core:core-ktx:${versions.core_ktx}"

    implementation "android.arch.lifecycle:extensions:${versions.arch_lifecycle}"
    implementation "android.arch.lifecycle:reactivestreams:${versions.arch_lifecycle}"
    kapt "android.arch.lifecycle:compiler:${versions.arch_lifecycle}"

    implementation "com.airbnb.android:epoxy:${versions.epoxy}"
    implementation "com.airbnb.android:epoxy-paging:${versions.epoxy}"
    implementation "com.airbnb.android:epoxy-databinding:${versions.epoxy}"
    kapt "com.airbnb.android:epoxy-processor:${versions.epoxy}"

    implementation "com.google.dagger:dagger-android:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"

    implementation "com.github.bumptech.glide:glide:${versions.glide}"
    kapt "com.github.bumptech.glide:compiler:${versions.glide}"

    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.18.0'
    testImplementation 'org.hamcrest:hamcrest-all:1.3'
    testImplementation "android.arch.core:core-testing:$versions.arch_lifecycle"

    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:${versions.espresso}"
    androidTestImplementation("com.android.support.test.espresso:espresso-core:${versions.espresso}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation "android.arch.core:core-testing:$versions.arch_lifecycle"

}
